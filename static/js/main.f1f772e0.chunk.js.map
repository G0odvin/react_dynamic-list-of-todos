{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoList","todos","setSelectedTodo","setSelectedTodoId","selectedTodoId","className","map","todo","classNames","id","completed","title","type","onClick","Loader","TodoModal","selectedTodo","useState","user","setUser","useEffect","fetchUser","a","userId","selectedUser","href","email","name","TodoFilter","setQuery","query","setSelectStatus","onChange","event","target","value","placeholder","style","pointerEvents","App","setTodos","selectStatus","todoId","setTodoId","load","setLoad","getTodosFromServer","loadingTodosFromServer","filter","item","queryToLowerCase","toLowerCase","filterInput","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1f772e0.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (selectedTodo: Todo) => void,\n  setSelectedTodoId: (todoId: number) => void,\n  selectedTodoId: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  setSelectedTodoId,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              '',\n              { 'has-background-info-light': selectedTodoId === todo.id },\n            )}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (<td className=\"is-vcentered\" />)}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  'has-text-success',\n                  { 'has-text-danger': !todo.completed },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodoId === todo.id ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    setSelectedTodoId(0);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    setSelectedTodo(todo);\n                    setSelectedTodoId(todo.id);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodoId: (todoId: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodoId,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const selectedUser = await getUser(selectedTodo.userId);\n\n      setUser(selectedUser);\n    };\n\n    fetchUser();\n  }, [selectedTodo.id]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodoId(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","type Props = {\n  setQuery: (value: string) => void,\n  query: string,\n  setSelectStatus: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    setQuery,\n    query,\n    setSelectStatus,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setSelectStatus(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectStatus, setSelectStatus] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo>();\n  const [todoId, setTodoId] = useState(0);\n  const [load, setLoad] = useState(true);\n\n  async function loadingTodosFromServer() {\n    const getTodosFromServer = await getTodos();\n\n    setTodos(getTodosFromServer);\n    setLoad(false);\n  }\n\n  useEffect(() => {\n    loadingTodosFromServer();\n  }, []);\n\n  const filtredTodos = () => {\n    const toFilter = todos.filter((item) => {\n      const queryToLowerCase = query.toLowerCase();\n      const filterInput = item.title.toLowerCase().includes(queryToLowerCase);\n\n      switch (selectStatus) {\n        case 'active':\n          return !item.completed && filterInput;\n        case 'completed':\n          return item.completed && filterInput;\n        default:\n          return filterInput;\n      }\n    });\n\n    return toFilter;\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setQuery={setQuery}\n                query={query}\n                setSelectStatus={setSelectStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {load && (\n                <Loader />\n              )}\n              <TodoList\n                todos={filtredTodos()}\n                setSelectedTodo={setSelectedTodo}\n                setSelectedTodoId={setTodoId}\n                selectedTodoId={todoId}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && todoId !== 0 && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodoId={setTodoId}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}